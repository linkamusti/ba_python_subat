{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Kullanıcının girmiş olduğu sayıların ortalamasını bulan program:\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Sayaç değerini girin:4\n",
      "Bir sayı girin: 10\n",
      "Bir sayı girin: 20\n",
      "Bir sayı girin: 40\n",
      "Bir sayı girin: 60\n",
      "32.5\n"
     ]
    }
   ],
   "source": [
    "toplam = 0\n",
    "sayac = 0\n",
    "limit= int(input(\"Sayaç değerini girin:\"))\n",
    "\n",
    "while sayac<limit:\n",
    "    sayi1 = int(input(\"Bir sayı girin: \"))\n",
    "    toplam = toplam + sayi1\n",
    "    sayac +=1\n",
    "\n",
    "print(toplam/limit)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "sayı giriniz: 1\n",
      "Bir sayı girin: 2\n",
      "Bir sayı girin: 3\n",
      "Bir sayı girin: -1\n",
      "2.0\n"
     ]
    }
   ],
   "source": [
    "toplam = 0\n",
    "sayac = 0\n",
    "\n",
    "sayi1 = int(input(\"sayı giriniz: \"))\n",
    "while sayi1 != -1:\n",
    "    sayac +=1\n",
    "    toplam = toplam + sayi1\n",
    "    sayi1 = int(input(\"Bir sayı girin: \"))\n",
    "    \n",
    "print(toplam/sayac)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Birinci kenar:90\n",
      "İkinci kenar:35\n",
      "Üçüncü kenar:45\n",
      "Dördüncü kenar:90\n",
      "Tanımlanamayacan cisim\n"
     ]
    }
   ],
   "source": [
    "# Klavyeden 4 kenar girilen bir dörtgeni kare mi dikdörtgen mi olduğunu bulan program.\n",
    "# düzgün input girilmezse hata basılacak.\n",
    "\n",
    "kenar1 = int(input(\"Birinci kenar:\"))\n",
    "kenar2 = int(input(\"İkinci kenar:\"))\n",
    "kenar3 = int(input(\"Üçüncü kenar:\"))\n",
    "kenar4 = int(input(\"Dördüncü kenar:\"))\n",
    "\n",
    "if kenar1==kenar2==kenar3==kenar4:\n",
    "    print(\"Bu bir kare\")\n",
    "elif kenar1 == kenar3 and kenar2 == kenar4:\n",
    "    print(\"Bu bir dikdörtgen\")\n",
    "elif kenar1 == kenar2 and kenar3 == kenar4:\n",
    "    print(\"Bu bir dikdörtgen\")\n",
    "elif kenar1 == kenar4 and kenar2==kenar3:\n",
    "    print(\"Bu bir dikdörtgen\")\n",
    "else:\n",
    "    print(\"Tanımlanamayan cisim\")\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Bir cümle giriniz: bilge adam python kursu\n",
      "20\n"
     ]
    }
   ],
   "source": [
    "#klavyeden girilen bir cümlenin harfleri sayan program\n",
    "\n",
    "cumle= input(\"Bir cümle giriniz: \")\n",
    "sayac = 0\n",
    "uzunluk = 0\n",
    "\n",
    "while sayac<len(cumle):\n",
    "    if cumle[sayac] != \" \":\n",
    "        uzunluk +=1 \n",
    "    sayac +=1\n",
    "print(uzunluk)  \n",
    "    \n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Maksimum değer giriniz: 5\n",
      "Bir sayı girin: 4\n",
      "Bir sayı girin: 3\n",
      "Bir sayı girin: 5\n",
      "Bir sayı girin: 1\n",
      "15.0 13\n",
      "2.0\n"
     ]
    }
   ],
   "source": [
    "# Kullanıcıdan bir sayı alınacak\n",
    "# 1 den başlayıp alınan bu sayıya kadar bütün sayıları yazmasını isteyeceğiz. (sırası önemli değil.)\n",
    "# Kullanıcı bu sayılardan bir tanesini yazmayacak ve bu yazılmayan sayıyı bulmaya çalışacağız. (Liste kullanmak yasak.)\n",
    "\n",
    "sayi = int(input(\"Maksimum değer giriniz: \"))\n",
    "sonuc = (sayi * (sayi + 1 )) / 2\n",
    "sayac = 0\n",
    "toplam = 0\n",
    "while sayac<(sayi-1):\n",
    "    sayi1 = int(input(\"Bir sayı girin: \"))\n",
    "    toplam = toplam + sayi1\n",
    "    sayac +=1\n",
    "print(sonuc, toplam)\n",
    "print(sonuc-toplam)\n",
    "\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
